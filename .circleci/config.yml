defaults: &defaults
  working_directory: /tmp/vimsical
  docker:
    - image: julienfantin/ci:0.0.6
      environment:
        JVM_OPTS: -Xmx2g
        DATOMIC_PROTOCOL: "mem"
        DATOMIC_LOGIN: "$DATOMIC_LOGIN"
        DATOMIC_PASSWORD: "$DATOMIC_PASSWORD"
        DATOMIC_LICENSE_KEY: "$DATOMIC_LICENSE_KEY"

    - image: circleci/cassandra:3.10
      environment:
        MAX_HEAP_SIZE: 1024m
        HEAP_NEWSIZE: 256m

    - image: redis:3.2.4-alpine

  environment:
    LEIN_ROOT: true
    LEIN_SNAPSHOTS_IN_RELEASE: true

version: 2
jobs:
  deps:
    <<: *defaults
    steps:
      - checkout
      - restore_cache:
          key: lein-{{ checksum "project.clj" }}
      - run: make deps
      - save_cache:
          paths:
            - ~/.m2
            - ~/.lein
          key: lein-{{ checksum "project.clj" }}

  test-clj:
    <<: *defaults
    steps:
      - checkout
      - restore_cache:
          key: lein-{{ checksum "project.clj" }}
      - run:
          name: wait for cassandra
          command: |
            /usr/bin/wait-for-command.sh -c 'nc -z localhost 9042' -t 30
      - run: make test-clj

  test-cljs:
    <<: *defaults
    steps:
      - checkout
      - restore_cache:
          key: lein-{{ checksum "project.clj" }}
      - run:
          name: wait for cassandra
          command: |
            /usr/bin/wait-for-command.sh -c 'nc -z localhost 9042' -t 30
      - run: make test-cljs

  test-cljs-advanced:
    <<: *defaults
    steps:
      - checkout
      - restore_cache:
          key: lein-{{ checksum "project.clj" }}
      - run:
          name: wait for cassandra
          command: |
            /usr/bin/wait-for-command.sh -c 'nc -z localhost 9042' -t 30
      - run: make test-cljs-advanced

  test-integration:
    <<: *defaults
    steps:
      - checkout
      - restore_cache:
          key: lein-{{ checksum "project.clj" }}
      - run:
          name: wait for cassandra
          command: |
            /usr/bin/wait-for-command.sh -c 'nc -z localhost 9042' -t 30
      - run: make test-integration

workflows:
  version: 2
  build-test:
    jobs:
      - deps

      - test-clj:
          requires:
            - deps

      - test-cljs:
          requires:
            - deps

      - test-cljs-advanced:
          requires:
            - deps
            - test-cljs

      - test-integration:
          requires:
            - deps
            - test-clj
